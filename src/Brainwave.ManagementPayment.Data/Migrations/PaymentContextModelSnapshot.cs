// <auto-generated />
using System;
using Brainwave.ManagementPayment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Brainwave.ManagementPayment.Data.Migrations
{
    [DbContext(typeof(PaymentContext))]
    partial class PaymentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Brainwave.ManagementPayment.Application.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusTransaction")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("Brainwave.ManagementPayment.Application.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Brainwave.ManagementPayment.Application.PaymentTransaction", b =>
                {
                    b.HasOne("Brainwave.ManagementPayment.Application.Payment", "Payment")
                        .WithOne("Transaction")
                        .HasForeignKey("Brainwave.ManagementPayment.Application.PaymentTransaction", "PaymentId")
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Brainwave.ManagementPayment.Application.Payment", b =>
                {
                    b.OwnsOne("Brainwave.ManagementPayment.Application.ValueObjects.CreditCard", "CreditCard", b1 =>
                        {
                            b1.Property<Guid>("PaymentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CardHolderName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("CardHolderName");

                            b1.Property<string>("CardNumber")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("CardNumber");

                            b1.Property<DateTime>("ExpirationDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("CardExpirationDate");

                            b1.Property<string>("SecurityCode")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("CardSecurityCode");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("CreditCard")
                        .IsRequired();
                });

            modelBuilder.Entity("Brainwave.ManagementPayment.Application.Payment", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
