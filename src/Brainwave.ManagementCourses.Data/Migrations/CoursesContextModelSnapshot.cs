// <auto-generated />
using System;
using Brainwave.ManagementCourses.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Brainwave.ManagementCourses.Data.Migrations
{
    [DbContext(typeof(CoursesContext))]
    partial class CoursesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Brainwave.ManagementCourses.Domain.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Brainwave.ManagementCourses.Domain.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Brainwave.ManagementCourses.Domain.Course", b =>
                {
                    b.OwnsOne("Brainwave.ManagementCourses.Domain.ValueObjects.Syllabus", "Syllabus", b1 =>
                        {
                            b1.Property<Guid>("CourseId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("SyllabusContent");

                            b1.Property<int>("DurationInHours")
                                .HasColumnType("INTEGER")
                                .HasColumnName("SyllabusDurationInHours");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("SyllabusLanguage");

                            b1.HasKey("CourseId");

                            b1.ToTable("Courses");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.Navigation("Syllabus")
                        .IsRequired();
                });

            modelBuilder.Entity("Brainwave.ManagementCourses.Domain.Lesson", b =>
                {
                    b.HasOne("Brainwave.ManagementCourses.Domain.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Brainwave.ManagementCourses.Domain.Course", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
